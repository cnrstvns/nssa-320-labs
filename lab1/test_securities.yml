---
- name: Test Vulnerabilities Before Applying Security
 #Author: NSSA Group 6 Security Team
 #Purpose: To test security vulnerabilities of our deployments
 #Date 9/17/2023
 #Version: 1.0
  hosts: web-test
  gather_facts: no
  tasks:
    - name: Attempt Directory Listing
      shell: curl -I http://192.168.206.151/directory_with_no_index/
      register: directory_listing_result
      ignore_errors: yes

    #Both based on Test server IP
    - name: Attempt to Fetch Server Signature
      shell: curl -I http://192.168.206.151/
      register: server_signature_result
      ignore_errors: yes
#Tests above check for any vulnerabilities before security configutations are applied

- name: Apply Secure Production Playbook
  hosts: web-test
  gather_facts: no
  tasks:
    - name: Run secure-prod-web.yml playbook
      include_tasks: secure-prod-web.yml
-name: Test Vulnerabilities After Applying Security
  hosts: web-test
  gather_facts: no
  tasks:
    - name: Attempt Directory Listing After Security
      shell: curl -I http://192.168.206.151/directory_with_no_index/
      register: directory_listing_after_result
      ignore_errors: yes

    - name: Attempt to Fetch Server Signature After Security
    shell: curl -I http://192.168.206.151/
    register: server_signature_after_result
    ignore_errors: yes

- name: Test ETag Information Access
  hosts: web-test
  tasks:
    - name: Make HTTP Request to Check ETag
      uri:
        url: "http://example.com/some-resource"  # Replace with URL
        method: HEAD
      register: http_response

    - name: Debug ETag Header
      debug:s
        var: http_response.headers.ETag
      when: "'ETag' in http_response.headers"

- name: Test for Cross-Site Tracing
  hosts: web-test
  tasks:
    - name: Send HTTP TRACE Request
      uri:
        url: "http://example.com/some-resource"  # Replace with URL
        method: TRACE  # Send HTTP TRACE request.
      register: http_trace_response
      ignore_errors: yes

    - name: Check for TRACE Response Headers
      debug:
        msg: "Cross-Site Tracing (XST) is possible!"
      when: "'TRACE' in http_trace_response.url"

- name: Check Established Ports
  hosts: your_target_hosts
  gather_facts: no  # You can set this to 'yes' if you need facts, like IP addresses.

    tasks:
    
- name: Get Established Ports with netstat
    ansible.builtin.shell: "netstat -tuln | grep ESTABLISHED"
    register: established_ports
    changed_when: false  # Do not mark the task as changed regardless of the result.
    name: Check Network Connectivity
    hosts: your_target_hosts
    gather_facts: no

  tasks:
    
- name: Ping a Remote Host
    ansible.builtin.ping:
      data: "hello"
    register: ping_result

    
- name: Display Ping Result
    debug:
      var: ping_result

- name: Check Firewall Status
  hosts: your_target_hosts
  gather_facts: yes

  tasks:
    
  - name: Check Firewall Service Status
    ansible.builtin.service:
      - name: firewalld  # Replace with the name of your firewall service if different (e.g., iptables).
      state: started  # Specify 'started' to check if the service is running.
    register: firewall_status

    
- name: Display Firewall Status
    debug:
      var: firewall_status
- name: Report Results
  hosts: web-test
  gather_facts: no
  tasks:
    - name: Display Vulnerability Test Results
      debug:
        var: item.stdout_lines
      with_items:
        - "{{ directory_listing_result }}"
        - "{{ server_signature_result }}"
        - "{{ directory_listing_after_result }}"
        - "{{ server_signature_after_result }}"
        - "{{ http_response }}"
        -"{{ http_trace_response }}"

      when: "'404 Not Found' not in item.stdout"

